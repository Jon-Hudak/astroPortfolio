---
import "../styles/global.css";
import "@fontsource/aldrich";
import { Icon } from "astro-icon";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import Head from "./Head.astro";

let showToTop = false;
// let lastYPos = 0;
let navbarChange = false;

const {
  title = "Custom Web Developer in Pittsburgh",
  description = "Fast, secure websites for small businesses in the Greater Pittsburgh Area!",
  ogImg = "/images/ogimg.jpg",
  url,
  footerClass,
  background,
  city,
} = Astro.props;
const socialImg = new URL(ogImg, Astro.site);
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---

<Head
  title={title}
  description={description}
  canonicalURL={canonicalURL}
  socialImg={ogImg}
>
  <body class={`flex flex-col overflow-x-hidden min-h-screen ${background}`}>
    <Navbar city={city} navbarChange={false} />
    <main class="cont-grid">
      <slot />
    </main>
    <Footer />
    <!-- <script src="https://cdn.jsdelivr.net/npm/vanilla-lazyload@17.8.3/dist/lazyload.min.js"></script> -->
  </body>
</Head>

<style is:global>
  /* .resize-animation-stopper * {
    animation: none !important;
    transition: none !important;
  } */
  .cont-grid {
    --gap: clamp(1rem, 6vw, 3rem);
    --full: minmax(var(--gap), 1fr);
    --content: min(80rem, 100% - var(--gap) * 2);
    --popout: minmax(0, 3rem);
    --feature: minmax(0, 5rem);

    display: grid;
    grid-template-columns:
      [full-start] var(--full)
      [feature-start] var(--feature)
      [popout-start] var(--popout)
      [content-start] var(--content) [content-end]
      var(--popout) [popout-end]
      var(--feature) [feature-end]
      var(--full) [full-end];
  }
  .cont-grid > :not(.breakout, .full),
  .full > :not(.breakout, .full) {
    grid-column: content;
  }
  .cont-grid > .full {
    grid-column: full;
    display: grid;
    grid-template-columns: subgrid;
  }
  .cont-grid .content {
    grid-column: content;
  }
  .cont-grid .popout {
    grid-column: popout;
  }
  .cont-grid .feature {
    grid-column: feature;
  }

  .full > .full {
    grid-column: full;
  }
  @media (max-width: 556px) {
    .cont-grid > :not(.breakout, .full, .mobile-full),
    .full > :not(.breakout, .full, .mobile-full),
    .mobile-full > :not(.breakout, .full, .mobile-full) {
      grid-column: content;
    }
    .cont-grid>.mobile-full {
      grid-column: full;
      display: grid;
      grid-template-columns: subgrid;
    }
    .full > .full,
    .full > .mobile-full,
    .mobile-full > .mobile-full, .mobile-full>.full {
      grid-column: full;
    }
  }
  html {
    @apply bg-dark-gray focus:outline-none focus:ring focus:ring-accent-orange ring-inset;
  }

  .h1 {
    @apply text-6xl font-title text-black text-center;
  }
  .h2 {
    @apply font-thin  text-5xl sm:text-5xl leading-snug;
  }
  .h3 {
    @apply text-2xl font-bold font-title;
  }
  .cont {
    @apply px-5 text-white bg-dark-gray rounded-lg border border-accent-blue shadow-xl;
  }

  .button {
    @apply font-black font-mono text-2xl rounded-sm shadow-lg bg-accent-blue border border-neutral-400 text-gray-900 hover:bg-sky-700 hover:text-gray-300 active:bg-sky-900 focus:outline-none focus:ring focus:ring-sky-500;
  }
  .ghostButton {
    @apply font-black font-mono rounded-sm shadow-lg border border-accent-blue text-accent-blue hover:bg-accent-blue hover:border-accent-blue-dark hover:text-black active:bg-sky-900 focus:outline-none focus:ring focus:ring-sky-500 cursor-pointer no-underline;
  }

  a.button {
    @apply no-underline text-black cursor-pointer !important;
  }

  .imgShadow-sm {
    -webkit-filter: drop-shadow(1px 1px 1px #43b0ff);

    filter: drop-shadow(0px 0px 4px #43b0ff);
  }
  .svg-shadow {
    -webkit-filter: drop-shadow(1px 1px 1px black);
    filter: drop-shadow(-1px 2px 3px black);
  }
  .dark a:not(.button, .ghostButton) {
    @apply text-accent-blue hover:text-accent-blue-dark;
  }
  .light a {
    @apply text-blue-500 hover:text-blue-800;
  }
  a {
    @apply underline;
  }

  .fadeUp {
    opacity: 0.1;
    transform: translateY(50px);
  }
  .rotated {
    transform: rotate(45deg);
  }
  .animate {
    opacity: 1;
    transform: translateY(0px);
    transition:
      opacity 2s,
      transform 2s;
  }
  .dark {
    @apply text-white bg-dark-gray;
  }
  .light {
    @apply text-black bg-white;
  }
</style>
<script>
  import observer from "../utils/observer";

  const fadeUps = document.querySelectorAll(".fadeUp");

  const rotates = document.querySelectorAll(".rotated");
  observer(fadeUps, "animate", 0.2);
  observer(rotates, "animate");
</script>
<script>
  //any non-internal link opens in a new window
  const internal = location.host.replace("www.", "");
  const internalRegEx = new RegExp(internal, "i");
  const links = document.querySelectorAll("a");
  links.forEach((link) => {
    let href = link.host;
    if (!internalRegEx.test(href)) {
      link.target = "_blank";
    }
  });
</script>
